{"ast":null,"code":"var _jsxFileName = \"/Users/agndj/Desktop/Coding/Fullstack Academy/Project-05/Strangers-Things-2/Strangers-Things-2/src/components/NewPosts.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useOutletContext, useNavigate } from \"react-router-dom\";\n\n// URL to make template literal\n// I could just save this in an API folder & import it everytime, i'll get to it eventually\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apiBaseURL = \"https://strangers-things.herokuapp.com/api/2209-ftb-mt-web-ft\";\n\n// FN\nconst NewPosts = () => {\n  _s();\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [location, setLocation] = useState(\"[On Request]\");\n  const [price, setPrice] = useState(\"\");\n  const [willDeliver, setWillDeliver] = useState(false);\n  const [, setPosts,, setProfileData] = useOutletContext();\n  const navigate = useNavigate();\n  async function formSubmitHandler(event) {\n    event.preventDefault();\n    // The parameter will not refresh the page, but run the code\n\n    try {\n      const response = await fetch(`${apiBaseURL}/posts`, {\n        method: \"POST\",\n        // All request (POST request) are made in all caps - 3b\n        headers: {\n          // Getting Token\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${localStorage.getItem(\"token\")}`\n          // must have Bearer \n        },\n\n        body: JSON.stringify({\n          post: {\n            // Pass in variables from the state\n            title: title,\n            description: description,\n            location: location,\n            price: price,\n            willDeliver: willDeliver\n          }\n        })\n      });\n\n      // Translate response into json\n      const data = await response.json();\n      const updatedPosts = await fetch(`${apiBaseURL}/posts`);\n      const translatedUpdatedPosts = await updatedPosts.json();\n      setPosts([...translatedUpdatedPosts.data.posts]);\n      const updatedUser = await fetch(`${apiBaseURL}/users/me`, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${localStorage.getItem(\"token\")}`\n        }\n      });\n      const translatedUpdatedUser = await updatedUser.json();\n      setProfileData(translatedUpdatedUser.data);\n      navigate(\"/posts\");\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"new-post\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formSubmitHandler,\n      className: \"new-post-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Title:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: title,\n        onChange: event => setTitle(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Description:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        type: \"text\",\n        value: description,\n        onChange: event => setDescription(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Price:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: price,\n        onChange: event => setPrice(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Location:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: location,\n        onChange: event => setLocation(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Willing to Deliver? \", \"(\", \"Check for yes\", \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        value: willDeliver,\n        onChange: event => setWillDeliver(event.target.checked)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"POST\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n};\n_s(NewPosts, \"ffBAEh7ubc9hK41XmG4E15fN1d0=\", false, function () {\n  return [useOutletContext, useNavigate];\n});\n_c = NewPosts;\nexport default NewPosts;\nvar _c;\n$RefreshReg$(_c, \"NewPosts\");","map":{"version":3,"names":["React","useState","useOutletContext","useNavigate","apiBaseURL","NewPosts","title","setTitle","description","setDescription","location","setLocation","price","setPrice","willDeliver","setWillDeliver","setPosts","setProfileData","navigate","formSubmitHandler","event","preventDefault","response","fetch","method","headers","localStorage","getItem","body","JSON","stringify","post","data","json","updatedPosts","translatedUpdatedPosts","posts","updatedUser","translatedUpdatedUser","error","console","log","target","value","checked"],"sources":["/Users/agndj/Desktop/Coding/Fullstack Academy/Project-05/Strangers-Things-2/Strangers-Things-2/src/components/NewPosts.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useOutletContext, useNavigate } from \"react-router-dom\";\n\n// URL to make template literal\n    // I could just save this in an API folder & import it everytime, i'll get to it eventually\nconst apiBaseURL = \"https://strangers-things.herokuapp.com/api/2209-ftb-mt-web-ft\";\n\n// FN\nconst NewPosts = () => {\n    const [title, setTitle] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [location, setLocation] = useState(\"[On Request]\");\n    const [price, setPrice] = useState(\"\");\n    const [willDeliver, setWillDeliver] = useState(false);\n\n    const [, setPosts, , setProfileData] = useOutletContext();\n    const navigate = useNavigate();\n\n    async function formSubmitHandler(event) {\n        event.preventDefault();\n            // The parameter will not refresh the page, but run the code\n\n        try {\n            const response = await fetch(`${apiBaseURL}/posts`,{\n                    method: \"POST\",\n                    // All request (POST request) are made in all caps - 3b\n                    headers: {\n                    // Getting Token\n                        \"Content-Type\": \"application/json\",\n                        \"Authorization\": `Bearer ${localStorage.getItem(\"token\")}`\n                        // must have Bearer \n                    },\n                    body: JSON.stringify({\n                        post: {\n                            // Pass in variables from the state\n                            title: title,\n                            description: description,\n                            location: location,\n                            price: price,\n                            willDeliver: willDeliver\n                        }\n                    })\n                })\n\n            // Translate response into json\n            const data = await response.json();\n\n            const updatedPosts = await fetch(`${apiBaseURL}/posts`)\n            const translatedUpdatedPosts = await updatedPosts.json();\n            setPosts([...translatedUpdatedPosts.data.posts]);\n\n            const updatedUser = await fetch(`${apiBaseURL}/users/me`,\n                {\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                        \"Authorization\": `Bearer ${localStorage.getItem(\"token\")}`\n                    },\n                }\n            )\n                \n            const translatedUpdatedUser = await updatedUser.json();\n\n            setProfileData(translatedUpdatedUser.data);\n            navigate(\"/posts\");\n\n        } catch(error) {\n            console.log(error);\n        }\n    }\n\n\n    return (\n        <div className='new-post'>\n\n            <form onSubmit={formSubmitHandler} className=\"new-post-form\">\n                <label>Title:</label>\n                <input type=\"text\" value={title} onChange={(event) => setTitle(event.target.value)}></input>\n\n                <br/>\n\n                <label>Description:</label>\n                <textarea type=\"text\" value={description} onChange={(event) => setDescription(event.target.value)}></textarea>\n\n                <br/>\n\n                <label>Price:</label>\n                <input type=\"text\" value={price} onChange={(event) => setPrice(event.target.value)}></input>\n\n                <br/>\n                \n                <label>Location:</label>\n                <input type=\"text\" value={location} onChange={(event) => setLocation(event.target.value)}></input>\n\n                <br/>\n\n                <label>Willing to Deliver? {\"(\"}Check for yes{\")\"}</label>\n                <input type=\"checkbox\" value={willDeliver} onChange={(event) => setWillDeliver(event.target.checked)}></input>\n\n                <br/>\n\n                <button type=\"submit\">POST</button>\n            </form>\n\n        </div>\n    )\n};\n\n    \nexport default NewPosts; "],"mappings":"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"},"metadata":{},"sourceType":"module"}