{"ast":null,"code":"var _jsxFileName = \"/Users/agndj/Desktop/Coding/Fullstack Academy/Project-05/Strangers-Things-2/Strangers-Things-2/src/components/Authorized/NewListing.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useOutletContext } from \"react-router\";\n\n// URL to make template literal\n// I could just save this in an API folder & import it everytime, i'll get to it eventually\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apiBaseURL = \"https://strangers-things.herokuapp.com/api/2209-ftb-mt-web-ft\";\nconst NewListing = () => {\n  _s();\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const [location, setLocation] = useState(\"\");\n  const [posts, setPosts] = useOutletContext();\n  async function postSubmitHandler(event) {\n    event.preventDefault();\n    // The parameter will not refresh the page, but run the code\n\n    try {\n      const response = await fetch(`${apiBaseURL}/listing`, {\n        method: \"POST\",\n        headers: {\n          // Getting Token\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${localStorage.getItem(\"token\")}`\n        },\n        body: JSON.stringify({\n          post: {\n            title: title,\n            description: description,\n            price: price,\n            location: location\n          }\n        })\n      });\n      const data = await response.json();\n      setTitle(\"\");\n      setDescription(\"\");\n      setPrice(\"\");\n      console.log(\"This is the data: \", data);\n      setPosts([...posts, data.data.post]);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  function updateTitleState(event) {\n    setTitle(event.target.value);\n  }\n  function updateDescriptionState(event) {\n    setDescription(event.target.value);\n  }\n  function updatePriceState(event) {\n    setPrice(event.target.value);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: postSubmitHandler,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"form-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: title,\n          onChange: updateTitleState\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: description,\n          onChange: updateDescriptionState\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: price,\n          onChange: updatePriceState\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Create New Posts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 13\n  }, this);\n};\n_s(NewListing, \"QwRQnogDfMEYD/tM8k0tGXWbFJM=\", false, function () {\n  return [useOutletContext];\n});\n_c = NewListing;\nexport default NewListing;\nvar _c;\n$RefreshReg$(_c, \"NewListing\");","map":{"version":3,"names":["React","useState","useOutletContext","apiBaseURL","NewListing","title","setTitle","description","setDescription","price","setPrice","location","setLocation","posts","setPosts","postSubmitHandler","event","preventDefault","response","fetch","method","headers","localStorage","getItem","body","JSON","stringify","post","data","json","console","log","error","updateTitleState","target","value","updateDescriptionState","updatePriceState"],"sources":["/Users/agndj/Desktop/Coding/Fullstack Academy/Project-05/Strangers-Things-2/Strangers-Things-2/src/components/Authorized/NewListing.js"],"sourcesContent":["\nimport React, { useState } from \"react\";\nimport { useOutletContext } from \"react-router\";\n\n// URL to make template literal\n    // I could just save this in an API folder & import it everytime, i'll get to it eventually\n    const apiBaseURL = \"https://strangers-things.herokuapp.com/api/2209-ftb-mt-web-ft\";\n\nconst NewListing = () => {\n    const [title, setTitle] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [price, setPrice] = useState(\"\");\n    const [location, setLocation] = useState(\"\");\n\n    const [posts, setPosts] = useOutletContext();\n\n    async function postSubmitHandler (event) {\n        event.preventDefault();\n            // The parameter will not refresh the page, but run the code\n\n        try {\n            const response = await fetch(`${apiBaseURL}/listing`, {\n                method: \"POST\",\n                headers: {\n                    // Getting Token\n                    \"Content-Type\": \"application/json\",\n                    \"Authorization\": `Bearer ${localStorage.getItem(\"token\")}`\n                },\n                body: JSON.stringify({\n                    post: {\n                        title: title,\n                        description: description,\n                        price: price,\n                        location: location\n                    }\n                })\n            })\n            const data = await response.json();\n            setTitle(\"\")\n            setDescription(\"\")\n            setPrice(\"\")\n            console.log(\"This is the data: \", data)\n    \n            setPosts([...posts, data.data.post])\n    \n            \n            } catch (error) {\n                console.log(error);\n            }\n        }\n        function updateTitleState(event) {\n            setTitle(event.target.value)\n        }\n        function updateDescriptionState(event) {\n            setDescription(event.target.value)\n        }\n        function updatePriceState(event) {\n            setPrice(event.target.value)\n        }\n    \n    \n        return (\n            <div>\n                <form onSubmit={postSubmitHandler}>\n                    <div id=\"form-content\">\n                    <label>Post</label>\n                    <input type=\"text\" value={title} onChange={updateTitleState}></input>\n    \n                    <label>Description</label>\n                    <input type=\"text\" value={description} onChange={updateDescriptionState}></input>\n    \n                    <label>Price</label>\n                    <input type=\"text\" value={price} onChange={updatePriceState}></input>\n    \n                    {/* <label>Deliver</label>\n                    <input list=\"text\" value={deliver} onChange={updateDeliverState}></input> */}\n    \n                    <button type=\"submit\">Create New Posts</button>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n    \nexport default NewListing;"],"mappings":"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"},"metadata":{},"sourceType":"module"}