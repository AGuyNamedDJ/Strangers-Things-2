{"ast":null,"code":"var _jsxFileName = \"/Users/agndj/Desktop/Coding/Fullstack Academy/Project-05/Strangers-Things-2/Strangers-Things-2/src/components/Posts.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useOutletContext, Link } from \"react-router-dom\";\nimport PostPreview from \"./PostPreview\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Posts = () => {\n  _s();\n  const [postsData,,,, loggedIn] = useOutletContext();\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  function postMatches(post, text) {\n    if (post.title.toLowerCase().includes(text.toLowerCase())) return true;\n    if (post.description.toLowerCase().includes(text.toLowerCase())) return true;\n    if (post.author.username.toLowerCase().includes(text.toLowerCase())) return true;\n    if (post.location.toLowerCase().includes(text.toLowerCase())) return true;\n    if (post.price.toLowerCase().includes(text.toLowerCase())) return true;else return false;\n  }\n  const filteredPosts = postsData.filter(post => postMatches(post, searchTerm));\n  const postsToDisplay = searchTerm.length ? filteredPosts : postsData;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"posts-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"All Posts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Search Posts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: searchTerm,\n          onChange: event => setSearchTerm(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), loggedIn ? /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"new-post-btn\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/posts/add\",\n          children: \"New Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 56\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 30\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), postsToDisplay.length ? postsToDisplay.map((post, idx) => {\n      return /*#__PURE__*/_jsxDEV(PostPreview, {\n        post: post\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 28\n      }, this);\n    }) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No Posts Available! \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n_s(Posts, \"xVzyqKCj8Xa6HGC9momw/rHIpLo=\", false, function () {\n  return [useOutletContext];\n});\n_c = Posts;\nexport default Posts;\n\n// Done\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["React","useState","useOutletContext","Link","PostPreview","Posts","postsData","loggedIn","searchTerm","setSearchTerm","postMatches","post","text","title","toLowerCase","includes","description","author","username","location","price","filteredPosts","filter","postsToDisplay","length","event","target","value","map","idx"],"sources":["/Users/agndj/Desktop/Coding/Fullstack Academy/Project-05/Strangers-Things-2/Strangers-Things-2/src/components/Posts.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useOutletContext, Link } from \"react-router-dom\";\n\nimport PostPreview from \"./PostPreview\";\n\nconst Posts = () => {\n    const [postsData,,,, loggedIn] = useOutletContext();\n    const [searchTerm, setSearchTerm] = useState(\"\");\n\n    function postMatches(post, text) {\n        if (post.title.toLowerCase().includes(text.toLowerCase())) return true;\n        if (post.description.toLowerCase().includes(text.toLowerCase())) return true;\n        if (post.author.username.toLowerCase().includes(text.toLowerCase())) return true;\n        if (post.location.toLowerCase().includes(text.toLowerCase())) return true;\n        if (post.price.toLowerCase().includes(text.toLowerCase())) return true;\n        else return false;\n    }\n\n    const filteredPosts = postsData.filter(post => postMatches(post, searchTerm));\n    const postsToDisplay = searchTerm.length ? filteredPosts : postsData;\n\n\n    return (\n        <div>\n            <div id=\"posts-header\">\n                <h1>All Posts</h1>\n                <form>\n                    <label>Search Posts</label>\n                    <input type=\"text\" value={searchTerm} onChange={(event) => setSearchTerm(event.target.value)}></input>\n                </form>\n                { loggedIn ? <button id=\"new-post-btn\"><Link to=\"/posts/add\">New Post</Link></button> : null }\n            </div>\n\n            {\n                postsToDisplay.length ? postsToDisplay.map((post, idx) => {\n                    return <PostPreview key={idx} post={post}/>\n                }) : <p>No Posts Available! </p>\n            }\n        </div>\n    )\n\n}\n\nexport default Posts;\n\n// Done"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,gBAAgB,EAAEC,IAAI,QAAQ,kBAAkB;AAEzD,OAAOC,WAAW,MAAM,eAAe;AAAC;AAExC,MAAMC,KAAK,GAAG,MAAM;EAAA;EAChB,MAAM,CAACC,SAAS,KAAKC,QAAQ,CAAC,GAAGL,gBAAgB,EAAE;EACnD,MAAM,CAACM,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEhD,SAASS,WAAW,CAACC,IAAI,EAAEC,IAAI,EAAE;IAC7B,IAAID,IAAI,CAACE,KAAK,CAACC,WAAW,EAAE,CAACC,QAAQ,CAACH,IAAI,CAACE,WAAW,EAAE,CAAC,EAAE,OAAO,IAAI;IACtE,IAAIH,IAAI,CAACK,WAAW,CAACF,WAAW,EAAE,CAACC,QAAQ,CAACH,IAAI,CAACE,WAAW,EAAE,CAAC,EAAE,OAAO,IAAI;IAC5E,IAAIH,IAAI,CAACM,MAAM,CAACC,QAAQ,CAACJ,WAAW,EAAE,CAACC,QAAQ,CAACH,IAAI,CAACE,WAAW,EAAE,CAAC,EAAE,OAAO,IAAI;IAChF,IAAIH,IAAI,CAACQ,QAAQ,CAACL,WAAW,EAAE,CAACC,QAAQ,CAACH,IAAI,CAACE,WAAW,EAAE,CAAC,EAAE,OAAO,IAAI;IACzE,IAAIH,IAAI,CAACS,KAAK,CAACN,WAAW,EAAE,CAACC,QAAQ,CAACH,IAAI,CAACE,WAAW,EAAE,CAAC,EAAE,OAAO,IAAI,CAAC,KAClE,OAAO,KAAK;EACrB;EAEA,MAAMO,aAAa,GAAGf,SAAS,CAACgB,MAAM,CAACX,IAAI,IAAID,WAAW,CAACC,IAAI,EAAEH,UAAU,CAAC,CAAC;EAC7E,MAAMe,cAAc,GAAGf,UAAU,CAACgB,MAAM,GAAGH,aAAa,GAAGf,SAAS;EAGpE,oBACI;IAAA,wBACI;MAAK,EAAE,EAAC,cAAc;MAAA,wBAClB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAkB,eAClB;QAAA,wBACI;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAA2B,eAC3B;UAAO,IAAI,EAAC,MAAM;UAAC,KAAK,EAAEE,UAAW;UAAC,QAAQ,EAAGiB,KAAK,IAAKhB,aAAa,CAACgB,KAAK,CAACC,MAAM,CAACC,KAAK;QAAE;UAAA;UAAA;UAAA;QAAA,QAAS;MAAA;QAAA;QAAA;QAAA;MAAA,QACnG,EACLpB,QAAQ,gBAAG;QAAQ,EAAE,EAAC,cAAc;QAAA,uBAAC,QAAC,IAAI;UAAC,EAAE,EAAC,YAAY;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAgB;QAAA;QAAA;QAAA;MAAA,QAAS,GAAG,IAAI;IAAA;MAAA;MAAA;MAAA;IAAA,QAC1F,EAGFgB,cAAc,CAACC,MAAM,GAAGD,cAAc,CAACK,GAAG,CAAC,CAACjB,IAAI,EAAEkB,GAAG,KAAK;MACtD,oBAAO,QAAC,WAAW;QAAW,IAAI,EAAElB;MAAK,GAAhBkB,GAAG;QAAA;QAAA;QAAA;MAAA,QAAe;IAC/C,CAAC,CAAC,gBAAG;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAA2B;EAAA;IAAA;IAAA;IAAA;EAAA,QAElC;AAGd,CAAC;AAAA,GApCKxB,KAAK;EAAA,QAC0BH,gBAAgB;AAAA;AAAA,KAD/CG,KAAK;AAsCX,eAAeA,KAAK;;AAEpB;AAAA;AAAA"},"metadata":{},"sourceType":"module"}