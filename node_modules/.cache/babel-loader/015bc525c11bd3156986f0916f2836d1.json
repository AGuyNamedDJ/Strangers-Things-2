{"ast":null,"code":"var _jsxFileName = \"/Users/agndj/Desktop/Coding/Fullstack Academy/Project-05/Strangers-Things-2/Strangers-Things-2/src/components/Webpages/Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport { useNavigate } from \"react-router-dom\";\n\n// URL to make template literal\n// I could just save this in an API folder & import it everytime, i'll get to it eventually\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apiBaseURL = \"https://strangers-things.herokuapp.com/api/2209-ftb-mt-web-ft\";\nconst Register = () => {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  async function formSubmitHandler(event) {\n    event.preventDefault();\n    try {\n      const response = await fetch(\"https://strangers-things.herokuapp.com/api/2209-ftb-mt-web-ft/users/register\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          user: {\n            username: username,\n            password: password\n          }\n        })\n      });\n      const data = await response.json();\n      console.log(\"This is our translated data: \", data);\n      localStorage.setItem(\"token\", data.data.token);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  function updateUsernameState(event) {\n    setUsername(event.target.value);\n  }\n  function updatePasswordState(event) {\n    setPassword(event.target.value);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formSubmitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Enter New Username Here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: username,\n        onChange: updateUsernameState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Enter New Password Here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: password,\n        onChange: updatePasswordState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Register For New Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n_s(Register, \"Lrw7JeD9zj6OUWhT/IH4OIvPKEk=\");\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","useEffect","ReactDOM","useNavigate","apiBaseURL","Register","username","setUsername","password","setPassword","formSubmitHandler","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","user","data","json","console","log","localStorage","setItem","token","error","updateUsernameState","target","value","updatePasswordState"],"sources":["/Users/agndj/Desktop/Coding/Fullstack Academy/Project-05/Strangers-Things-2/Strangers-Things-2/src/components/Webpages/Register.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport { useNavigate } from \"react-router-dom\";\n\n// URL to make template literal\n    // I could just save this in an API folder & import it everytime, i'll get to it eventually\nconst apiBaseURL = \"https://strangers-things.herokuapp.com/api/2209-ftb-mt-web-ft\";\n\nconst Register = () => {\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n    async function formSubmitHandler(event) {\n        event.preventDefault();\n\n        try {\n            const response = await fetch(\n                \"https://strangers-things.herokuapp.com/api/2209-ftb-mt-web-ft/users/register\",\n                {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\"\n                    },\n                    body: JSON.stringify({\n                        user: {\n                            username: username,\n                            password: password\n                        }\n                    })\n                }\n            )\n            const data = await response.json();\n            console.log(\"This is our translated data: \", data);\n            localStorage.setItem(\"token\", data.data.token)\n        } catch(error) {\n            console.log(error);\n        }\n    }\n\n    function updateUsernameState(event) {\n        setUsername(event.target.value);\n    }\n\n    function updatePasswordState(event) {\n        setPassword(event.target.value);\n    }\n\n    return (\n        <div>\n            <form onSubmit={formSubmitHandler}>\n                <label>Enter New Username Here</label>\n                <input type=\"text\" value={username} onChange={updateUsernameState}></input>\n\n                <br/>\n\n                <label>Enter New Password Here</label>\n                <input type=\"text\" value={password} onChange={updatePasswordState}></input>\n\n                <br/>\n\n                <button type=\"submit\">Register For New Account</button>\n            </form>\n        </div>\n    )\n}\n\nexport default Register;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAM,WAAW;AAChC,SAASC,WAAW,QAAQ,kBAAkB;;AAE9C;AACI;AAAA;AACJ,MAAMC,UAAU,GAAG,+DAA+D;AAElF,MAAMC,QAAQ,GAAG,MAAM;EAAA;EACnB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE5C,eAAeU,iBAAiB,CAACC,KAAK,EAAE;IACpCA,KAAK,CAACC,cAAc,EAAE;IAEtB,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CACxB,8EAA8E,EAC9E;QACIC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACjBC,IAAI,EAAE;YACFd,QAAQ,EAAEA,QAAQ;YAClBE,QAAQ,EAAEA;UACd;QACJ,CAAC;MACL,CAAC,CACJ;MACD,MAAMa,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,EAAE;MAClCC,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAEH,IAAI,CAAC;MAClDI,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEL,IAAI,CAACA,IAAI,CAACM,KAAK,CAAC;IAClD,CAAC,CAAC,OAAMC,KAAK,EAAE;MACXL,OAAO,CAACC,GAAG,CAACI,KAAK,CAAC;IACtB;EACJ;EAEA,SAASC,mBAAmB,CAAClB,KAAK,EAAE;IAChCJ,WAAW,CAACI,KAAK,CAACmB,MAAM,CAACC,KAAK,CAAC;EACnC;EAEA,SAASC,mBAAmB,CAACrB,KAAK,EAAE;IAChCF,WAAW,CAACE,KAAK,CAACmB,MAAM,CAACC,KAAK,CAAC;EACnC;EAEA,oBACI;IAAA,uBACI;MAAM,QAAQ,EAAErB,iBAAkB;MAAA,wBAC9B;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAsC,eACtC;QAAO,IAAI,EAAC,MAAM;QAAC,KAAK,EAAEJ,QAAS;QAAC,QAAQ,EAAEuB;MAAoB;QAAA;QAAA;QAAA;MAAA,QAAS,eAE3E;QAAA;QAAA;QAAA;MAAA,QAAK,eAEL;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAsC,eACtC;QAAO,IAAI,EAAC,MAAM;QAAC,KAAK,EAAErB,QAAS;QAAC,QAAQ,EAAEwB;MAAoB;QAAA;QAAA;QAAA;MAAA,QAAS,eAE3E;QAAA;QAAA;QAAA;MAAA,QAAK,eAEL;QAAQ,IAAI,EAAC,QAAQ;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAkC;IAAA;MAAA;MAAA;MAAA;IAAA;EACpD;IAAA;IAAA;IAAA;EAAA,QACL;AAEd,CAAC;AAAA,GAxDK3B,QAAQ;AAAA,KAARA,QAAQ;AA0Dd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module"}