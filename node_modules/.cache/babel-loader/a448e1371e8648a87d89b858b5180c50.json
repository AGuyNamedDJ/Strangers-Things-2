{"ast":null,"code":"var _jsxFileName = \"/Users/agndj/Desktop/Coding/Fullstack Academy/Project-05/Strangers-Things-2/Strangers-Things-2/src/components/MessageForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useOutletContext, useNavigate } from \"react-router-dom\";\n\n// URL to make template literal\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apiBaseURL = \"https://strangers-things.herokuapp.com/api/2209-ftb-mt-web-ft\";\nconst MessageForm = props => {\n  _s();\n  const [content, setContent] = useState(\"\");\n  const [posts, setPosts,, setProfileData] = useOutletContext();\n  const navigate = useNavigate();\n  async function messageFormSubmitHandler(event) {\n    event.preventDefault();\n    // The parameter will not refresh the page, but run the code\n\n    try {\n      const response = await fetch(`${apiBaseURL}/posts/${props.indivPost._id}/messages`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${localStorage.getItem(\"token\")}`\n        },\n        body: JSON.stringify({\n          message: {\n            content: content\n          }\n        })\n      });\n      const data = await response.json();\n      const updatedPosts = await fetch(`${apiBaseURL}/posts`);\n      const translatedUpdatedPosts = await updatedPosts.json();\n      setPosts([...translatedUpdatedPosts.data.posts]);\n      props.findSpecificPost();\n      props.handleToggleMessageForm();\n      navigate(`/posts/${props.indivPost._id}`);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"new-post\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: messageFormSubmitHandler,\n      id: \"new-post-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Message: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        type: \"text\",\n        value: content,\n        onChange: event => setContent(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"SEND\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n_s(MessageForm, \"yYnLMRZxGbNINSZfgNmoXKnHaMA=\", false, function () {\n  return [useOutletContext, useNavigate];\n});\n_c = MessageForm;\nexport default MessageForm;\n\n// Complete\nvar _c;\n$RefreshReg$(_c, \"MessageForm\");","map":{"version":3,"names":["React","useState","useOutletContext","useNavigate","apiBaseURL","MessageForm","props","content","setContent","posts","setPosts","setProfileData","navigate","messageFormSubmitHandler","event","preventDefault","response","fetch","indivPost","_id","method","headers","localStorage","getItem","body","JSON","stringify","message","data","json","updatedPosts","translatedUpdatedPosts","findSpecificPost","handleToggleMessageForm","error","console","log","target","value"],"sources":["/Users/agndj/Desktop/Coding/Fullstack Academy/Project-05/Strangers-Things-2/Strangers-Things-2/src/components/MessageForm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useOutletContext, useNavigate } from \"react-router-dom\";\n\n// URL to make template literal\nconst apiBaseURL = \"https://strangers-things.herokuapp.com/api/2209-ftb-mt-web-ft\";\n\nconst MessageForm = (props) => {\n    const [content, setContent] = useState(\"\");\n    const [posts, setPosts, , setProfileData] = useOutletContext();\n    const navigate = useNavigate();\n\n\n    async function messageFormSubmitHandler(event) {\n        event.preventDefault();\n            // The parameter will not refresh the page, but run the code\n\n        try {\n            const response = await fetch(`${apiBaseURL}/posts/${props.indivPost._id}/messages`,\n                {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                        \"Authorization\": `Bearer ${localStorage.getItem(\"token\")}`\n                    },\n                    body: JSON.stringify({\n                        message: {\n                            content: content\n                        }\n                    })\n                }\n            )\n            const data = await response.json();\n\n            const updatedPosts = await fetch(`${apiBaseURL}/posts`)\n            const translatedUpdatedPosts = await updatedPosts.json();\n\n            setPosts([...translatedUpdatedPosts.data.posts]);\n            props.findSpecificPost();\n            props.handleToggleMessageForm();\n            navigate(`/posts/${props.indivPost._id}`);\n            \n        } catch(error) {\n            console.log(error);\n        }\n    }\n\n    return (\n        <div id='new-post'>\n\n            <form onSubmit={messageFormSubmitHandler} id=\"new-post-form\">\n\n                <label>Message: </label>\n                <textarea type=\"text\" value={content} onChange={(event) => setContent(event.target.value)}></textarea>\n\n                <br/>\n\n                <button type=\"submit\">SEND</button>\n            </form>\n\n        </div>\n    )\n};\n\nexport default MessageForm; \n\n// Complete"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;;AAEhE;AAAA;AACA,MAAMC,UAAU,GAAG,+DAA+D;AAElF,MAAMC,WAAW,GAAIC,KAAK,IAAK;EAAA;EAC3B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACQ,KAAK,EAAEC,QAAQ,GAAIC,cAAc,CAAC,GAAGT,gBAAgB,EAAE;EAC9D,MAAMU,QAAQ,GAAGT,WAAW,EAAE;EAG9B,eAAeU,wBAAwB,CAACC,KAAK,EAAE;IAC3CA,KAAK,CAACC,cAAc,EAAE;IAClB;;IAEJ,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEb,UAAW,UAASE,KAAK,CAACY,SAAS,CAACC,GAAI,WAAU,EAC9E;QACIC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE,kBAAkB;UAClC,eAAe,EAAG,UAASC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAE;QAC7D,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACjBC,OAAO,EAAE;YACLpB,OAAO,EAAEA;UACb;QACJ,CAAC;MACL,CAAC,CACJ;MACD,MAAMqB,IAAI,GAAG,MAAMZ,QAAQ,CAACa,IAAI,EAAE;MAElC,MAAMC,YAAY,GAAG,MAAMb,KAAK,CAAE,GAAEb,UAAW,QAAO,CAAC;MACvD,MAAM2B,sBAAsB,GAAG,MAAMD,YAAY,CAACD,IAAI,EAAE;MAExDnB,QAAQ,CAAC,CAAC,GAAGqB,sBAAsB,CAACH,IAAI,CAACnB,KAAK,CAAC,CAAC;MAChDH,KAAK,CAAC0B,gBAAgB,EAAE;MACxB1B,KAAK,CAAC2B,uBAAuB,EAAE;MAC/BrB,QAAQ,CAAE,UAASN,KAAK,CAACY,SAAS,CAACC,GAAI,EAAC,CAAC;IAE7C,CAAC,CAAC,OAAMe,KAAK,EAAE;MACXC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACtB;EACJ;EAEA,oBACI;IAAK,EAAE,EAAC,UAAU;IAAA,uBAEd;MAAM,QAAQ,EAAErB,wBAAyB;MAAC,EAAE,EAAC,eAAe;MAAA,wBAExD;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAwB,eACxB;QAAU,IAAI,EAAC,MAAM;QAAC,KAAK,EAAEN,OAAQ;QAAC,QAAQ,EAAGO,KAAK,IAAKN,UAAU,CAACM,KAAK,CAACuB,MAAM,CAACC,KAAK;MAAE;QAAA;QAAA;QAAA;MAAA,QAAY,eAEtG;QAAA;QAAA;QAAA;MAAA,QAAK,eAEL;QAAQ,IAAI,EAAC,QAAQ;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAc;IAAA;MAAA;MAAA;MAAA;IAAA;EAChC;IAAA;IAAA;IAAA;EAAA,QAEL;AAEd,CAAC;AAAC,GAvDIjC,WAAW;EAAA,QAE+BH,gBAAgB,EAC3CC,WAAW;AAAA;AAAA,KAH1BE,WAAW;AAyDjB,eAAeA,WAAW;;AAE1B;AAAA;AAAA"},"metadata":{},"sourceType":"module"}